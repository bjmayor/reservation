syntax = "proto3";
package reservation;

import "google/protobuf/timestamp.proto";

// Reservation Status for a resource
enum ReservationStatus {
  RESERVATION_STATUS_UNKNOWN = 0;
  RESERVATION_STATUS_PENDING = 1;
  RESERVATION_STATUS_CONFIRMED = 2;
  RESERVATION_STATUS_BLOCKED = 3;
}

// when reservation is created, updated or deleted, record the update type
enum ReservationUpdateType {
  RESERVATION_UPDATE_TYPE_UNKNOWN = 0;
  RESERVATION_UPDATE_TYPE_CREATE = 1;
  RESERVATION_UPDATE_TYPE_UPDATE = 2;
  RESERVATION_UPDATE_TYPE_DELETE = 3;
}

// Core reservation object. Contains all the information about a reservation
// if listenResponse op is DELETE, only id will be populated
message Reservation {
  // unique id for a reservation, if put into ReservationRequest, id should be empty
  string id = 1;
  // user id for the reservation
  string user_id = 2;
  // reservation status , used for different purpose
  ReservationStatus status = 3;

  // resource id for the reservation
  string resource_id = 4;
  // start and end time for the reservation
  google.protobuf.Timestamp start = 5;
  google.protobuf.Timestamp end = 6;

  // extra note
  string note = 7;
}

// make a reservation request
message ReserveRequest {
  Reservation reservation = 1;
}
// Created a reservation will be returned in ReserveResponse
message ReserveResponse {
  Reservation reservation = 1;
}

// only note is allowed to be updated
message UpdateRequest {
  string note = 2;
}

// updated reservation will be returned in UpdateResponse
message UpdateResponse {
  Reservation reservation = 1;
}

// To change a reservation status from PENDING to CONFIRMED , send a confirm request
message ConfirmRequest {
  string id = 1;
}

message ConfirmResponse {
  Reservation reservation = 1;
}

// cancel a reservation
message CancelRequest {
  string id = 1;
}

message CancelResponse {
  Reservation reservation = 1;
}
// To get a reservation by id
message GetRequest {
  string id = 1;
}

// return a reservation
message GetResponse {
  Reservation reservation = 1;
}

message ReservationQuery {
  string resource_id = 1;
  string user_id = 2;
  // use status to filter result. If UNKNOWN, return all reservations
  ReservationStatus status = 3;
  google.protobuf.Timestamp start = 4;
  google.protobuf.Timestamp end = 5;
  // current page number
  int32 page = 6;
  // page size
  int32 page_size = 7;
  // sort direction
  bool desc = 8;
}

message QueryRequest {
  ReservationQuery query = 1;
}

message ListenRequest {}
message ListenResponse {
  ReservationUpdateType op = 1;
  Reservation reservation = 2;
}

service ReservationService {
  rpc reserve(ReserveRequest) returns (ReserveResponse);
  rpc confirm(ConfirmRequest) returns (ConfirmResponse);
  rpc update(UpdateRequest) returns (UpdateResponse);
  rpc cancel(CancelRequest) returns (CancelResponse);
  rpc get(GetRequest) returns (GetResponse);
  rpc query(QueryRequest) returns (stream Reservation);
  // another system could monitor newly added/confirmed/cancelled reservations
  rpc listen(ListenRequest) returns (stream Reservation);
}
